

'''
import numpy as np
import matplotlib.pyplot as plt
import scipy.signal as sig
import sounddevice as sd

fs = 44100  # sampling rate
T = 5  # length of the measurement signal in sec
Tr = 2  # length of the expected system response in sec

t = np.linspace(0, T, T * fs)
x = sig.chirp(t, 20, T, 20000, 'linear', phi=90)
x = 0.9 * x / np.max(np.abs(x))

x = np.concatenate((x, np.zeros(Tr*fs)))
y = sd.playrec(x, fs, channels=1)
sd.wait()
y = np.squeeze(y)

# print('Playback level: ', 20*np.log10(max(x)), ' dB')
# print('Input level: ', 20*np.log10(max(y)), ' dB')

H = np.fft.rfft(y) / np.fft.rfft(x)
h = np.fft.irfft(H)

h = h[0:Tr*fs]

plt.figure(figsize=(10, 5))
t = 1/fs * np.arange(len(h))
plt.plot(t, h)
plt.axis([0.0, 1.0, -1.1*np.max(np.abs(h)), 1.1*np.max(np.abs(h))])
plt.xlabel(r'$t$ in s')
plt.ylabel(r'$\hat{h}[k]$');
'''

2==2